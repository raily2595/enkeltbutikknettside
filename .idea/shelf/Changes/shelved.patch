Index: amplify/.config/project-config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/.config/project-config.json b/amplify/.config/project-config.json
new file mode 100644
--- /dev/null	(date 1704661110662)
+++ b/amplify/.config/project-config.json	(date 1704661110662)
@@ -0,0 +1,17 @@
+{
+  "providers": [
+    "awscloudformation"
+  ],
+  "projectName": "enkeltbutikknettside",
+  "version": "3.1",
+  "frontend": "javascript",
+  "javascript": {
+    "framework": "react",
+    "config": {
+      "SourceDir": "src",
+      "DistributionDir": "build",
+      "BuildCommand": "npm.cmd run-script build",
+      "StartCommand": "npm.cmd run-script start"
+    }
+  }
+}
\ No newline at end of file
Index: amplify/backend/api/enkeltbutikknettside/stacks/CustomResources.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/stacks/CustomResources.json b/amplify/backend/api/enkeltbutikknettside/stacks/CustomResources.json
new file mode 100644
--- /dev/null	(date 1704661030367)
+++ b/amplify/backend/api/enkeltbutikknettside/stacks/CustomResources.json	(date 1704661030367)
@@ -0,0 +1,58 @@
+{
+  "AWSTemplateFormatVersion": "2010-09-09",
+  "Description": "An auto-generated nested stack.",
+  "Metadata": {},
+  "Parameters": {
+    "AppSyncApiId": {
+      "Type": "String",
+      "Description": "The id of the AppSync API associated with this project."
+    },
+    "AppSyncApiName": {
+      "Type": "String",
+      "Description": "The name of the AppSync API",
+      "Default": "AppSyncSimpleTransform"
+    },
+    "env": {
+      "Type": "String",
+      "Description": "The environment name. e.g. Dev, Test, or Production",
+      "Default": "NONE"
+    },
+    "S3DeploymentBucket": {
+      "Type": "String",
+      "Description": "The S3 bucket containing all deployment assets for the project."
+    },
+    "S3DeploymentRootKey": {
+      "Type": "String",
+      "Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
+    }
+  },
+  "Resources": {
+    "EmptyResource": {
+      "Type": "Custom::EmptyResource",
+      "Condition": "AlwaysFalse"
+    }
+  },
+  "Conditions": {
+    "HasEnvironmentParameter": {
+      "Fn::Not": [
+        {
+          "Fn::Equals": [
+            {
+              "Ref": "env"
+            },
+            "NONE"
+          ]
+        }
+      ]
+    },
+    "AlwaysFalse": {
+      "Fn::Equals": ["true", "false"]
+    }
+  },
+  "Outputs": {
+    "EmptyOutput": {
+      "Description": "An empty output. You may delete this if you have at least one resource above.",
+      "Value": ""
+    }
+  }
+}
Index: amplify/backend/api/enkeltbutikknettside/resolvers/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/resolvers/README.md b/amplify/backend/api/enkeltbutikknettside/resolvers/README.md
new file mode 100644
--- /dev/null	(date 1704661030362)
+++ b/amplify/backend/api/enkeltbutikknettside/resolvers/README.md	(date 1704661030362)
@@ -0,0 +1,2 @@
+Any resolvers that you add in this directory will override the ones automatically generated by Amplify CLI and will be directly copied to the cloud. 
+For more information, visit [https://docs.amplify.aws/cli/graphql-transformer/resolvers](https://docs.amplify.aws/cli/graphql-transformer/resolvers)
\ No newline at end of file
Index: amplify/backend/tags.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/tags.json b/amplify/backend/tags.json
new file mode 100644
--- /dev/null	(date 1704661030388)
+++ b/amplify/backend/tags.json	(date 1704661030388)
@@ -0,0 +1,10 @@
+[
+  {
+    "Key": "user:Stack",
+    "Value": "{project-env}"
+  },
+  {
+    "Key": "user:Application",
+    "Value": "{project-name}"
+  }
+]
\ No newline at end of file
Index: amplify/backend/backend-config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/backend-config.json b/amplify/backend/backend-config.json
new file mode 100644
--- /dev/null	(date 1704661230238)
+++ b/amplify/backend/backend-config.json	(date 1704661230238)
@@ -0,0 +1,25 @@
+{
+  "api": {
+    "enkeltbutikknettside": {
+      "dependsOn": [],
+      "output": {
+        "authConfig": {
+          "additionalAuthenticationProviders": [
+            {
+              "authenticationType": "AWS_IAM"
+            }
+          ],
+          "defaultAuthentication": {
+            "apiKeyConfig": {
+              "apiKeyExpirationDays": 30,
+              "description": "api key description"
+            },
+            "authenticationType": "API_KEY"
+          }
+        }
+      },
+      "providerPlugin": "awscloudformation",
+      "service": "AppSync"
+    }
+  }
+}
\ No newline at end of file
Index: amplify/backend/types/amplify-dependent-resources-ref.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/types/amplify-dependent-resources-ref.d.ts b/amplify/backend/types/amplify-dependent-resources-ref.d.ts
new file mode 100644
--- /dev/null	(date 1704661155402)
+++ b/amplify/backend/types/amplify-dependent-resources-ref.d.ts	(date 1704661155402)
@@ -0,0 +1,9 @@
+export type AmplifyDependentResourcesAttributes = {
+  "api": {
+    "enkeltbutikknettside": {
+      "GraphQLAPIEndpointOutput": "string",
+      "GraphQLAPIIdOutput": "string",
+      "GraphQLAPIKeyOutput": "string"
+    }
+  }
+}
\ No newline at end of file
Index: .graphqlconfig.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.graphqlconfig.yml b/.graphqlconfig.yml
new file mode 100644
--- /dev/null	(date 1704661230234)
+++ b/.graphqlconfig.yml	(date 1704661230234)
@@ -0,0 +1,15 @@
+projects:
+  enkeltbutikknettside:
+    schemaPath: amplify/backend/api/enkeltbutikknettside/build/schema.graphql
+    includes:
+      - src/graphql/**/*.js
+    excludes:
+      - ./amplify/**
+    extensions:
+      amplify:
+        codeGenTarget: javascript
+        generatedFileName: ''
+        docsFilePath: src/graphql
+        region: eu-north-1
+        apiId: null
+        maxDepth: 2
Index: src/graphql/mutations.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/graphql/mutations.js b/src/graphql/mutations.js
new file mode 100644
--- /dev/null	(date 1704661230232)
+++ b/src/graphql/mutations.js	(date 1704661230232)
@@ -0,0 +1,327 @@
+/* eslint-disable */
+// this is an auto generated file. This will be overwritten
+
+export const createProdukt = /* GraphQL */ `
+  mutation CreateProdukt(
+    $input: CreateProduktInput!
+    $condition: ModelProduktConditionInput
+  ) {
+    createProdukt(input: $input, condition: $condition) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const updateProdukt = /* GraphQL */ `
+  mutation UpdateProdukt(
+    $input: UpdateProduktInput!
+    $condition: ModelProduktConditionInput
+  ) {
+    updateProdukt(input: $input, condition: $condition) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const deleteProdukt = /* GraphQL */ `
+  mutation DeleteProdukt(
+    $input: DeleteProduktInput!
+    $condition: ModelProduktConditionInput
+  ) {
+    deleteProdukt(input: $input, condition: $condition) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const createTransaksjon = /* GraphQL */ `
+  mutation CreateTransaksjon(
+    $input: CreateTransaksjonInput!
+    $condition: ModelTransaksjonConditionInput
+  ) {
+    createTransaksjon(input: $input, condition: $condition) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const updateTransaksjon = /* GraphQL */ `
+  mutation UpdateTransaksjon(
+    $input: UpdateTransaksjonInput!
+    $condition: ModelTransaksjonConditionInput
+  ) {
+    updateTransaksjon(input: $input, condition: $condition) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const deleteTransaksjon = /* GraphQL */ `
+  mutation DeleteTransaksjon(
+    $input: DeleteTransaksjonInput!
+    $condition: ModelTransaksjonConditionInput
+  ) {
+    deleteTransaksjon(input: $input, condition: $condition) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const createKunde = /* GraphQL */ `
+  mutation CreateKunde(
+    $input: CreateKundeInput!
+    $condition: ModelKundeConditionInput
+  ) {
+    createKunde(input: $input, condition: $condition) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const updateKunde = /* GraphQL */ `
+  mutation UpdateKunde(
+    $input: UpdateKundeInput!
+    $condition: ModelKundeConditionInput
+  ) {
+    updateKunde(input: $input, condition: $condition) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const deleteKunde = /* GraphQL */ `
+  mutation DeleteKunde(
+    $input: DeleteKundeInput!
+    $condition: ModelKundeConditionInput
+  ) {
+    deleteKunde(input: $input, condition: $condition) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const createBestilling = /* GraphQL */ `
+  mutation CreateBestilling(
+    $input: CreateBestillingInput!
+    $condition: ModelBestillingConditionInput
+  ) {
+    createBestilling(input: $input, condition: $condition) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
+export const updateBestilling = /* GraphQL */ `
+  mutation UpdateBestilling(
+    $input: UpdateBestillingInput!
+    $condition: ModelBestillingConditionInput
+  ) {
+    updateBestilling(input: $input, condition: $condition) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
+export const deleteBestilling = /* GraphQL */ `
+  mutation DeleteBestilling(
+    $input: DeleteBestillingInput!
+    $condition: ModelBestillingConditionInput
+  ) {
+    deleteBestilling(input: $input, condition: $condition) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
Index: src/graphql/queries.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/graphql/queries.js b/src/graphql/queries.js
new file mode 100644
--- /dev/null	(date 1704661230231)
+++ b/src/graphql/queries.js	(date 1704661230231)
@@ -0,0 +1,268 @@
+/* eslint-disable */
+// this is an auto generated file. This will be overwritten
+
+export const getProdukt = /* GraphQL */ `
+  query GetProdukt($id: ID!) {
+    getProdukt(id: $id) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const listProdukts = /* GraphQL */ `
+  query ListProdukts(
+    $filter: ModelProduktFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    listProdukts(filter: $filter, limit: $limit, nextToken: $nextToken) {
+      items {
+        id
+        produktnavn
+        farge
+        farge2
+        lengde
+        bredde
+        detaljefarger
+        klips
+        vinyltekst
+        fontfarge
+        font
+        pris
+        kommentar
+        valgtLeke
+        bestillingID
+        createdAt
+        updatedAt
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
+export const produktsByBestillingID = /* GraphQL */ `
+  query ProduktsByBestillingID(
+    $bestillingID: ID!
+    $sortDirection: ModelSortDirection
+    $filter: ModelProduktFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    produktsByBestillingID(
+      bestillingID: $bestillingID
+      sortDirection: $sortDirection
+      filter: $filter
+      limit: $limit
+      nextToken: $nextToken
+    ) {
+      items {
+        id
+        produktnavn
+        farge
+        farge2
+        lengde
+        bredde
+        detaljefarger
+        klips
+        vinyltekst
+        fontfarge
+        font
+        pris
+        kommentar
+        valgtLeke
+        bestillingID
+        createdAt
+        updatedAt
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
+export const getTransaksjon = /* GraphQL */ `
+  query GetTransaksjon($id: ID!) {
+    getTransaksjon(id: $id) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const listTransaksjons = /* GraphQL */ `
+  query ListTransaksjons(
+    $filter: ModelTransaksjonFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    listTransaksjons(filter: $filter, limit: $limit, nextToken: $nextToken) {
+      items {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
+export const getKunde = /* GraphQL */ `
+  query GetKunde($id: ID!) {
+    getKunde(id: $id) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const listKundes = /* GraphQL */ `
+  query ListKundes(
+    $filter: ModelKundeFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    listKundes(filter: $filter, limit: $limit, nextToken: $nextToken) {
+      items {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
+export const getBestilling = /* GraphQL */ `
+  query GetBestilling($id: ID!) {
+    getBestilling(id: $id) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
+export const listBestillings = /* GraphQL */ `
+  query ListBestillings(
+    $filter: ModelBestillingFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    listBestillings(filter: $filter, limit: $limit, nextToken: $nextToken) {
+      items {
+        id
+        ordreDato
+        bestillingsstatus
+        kundeID
+        createdAt
+        updatedAt
+        bestillingTransaksjonId
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
+export const bestillingsByKundeID = /* GraphQL */ `
+  query BestillingsByKundeID(
+    $kundeID: ID!
+    $sortDirection: ModelSortDirection
+    $filter: ModelBestillingFilterInput
+    $limit: Int
+    $nextToken: String
+  ) {
+    bestillingsByKundeID(
+      kundeID: $kundeID
+      sortDirection: $sortDirection
+      filter: $filter
+      limit: $limit
+      nextToken: $nextToken
+    ) {
+      items {
+        id
+        ordreDato
+        bestillingsstatus
+        kundeID
+        createdAt
+        updatedAt
+        bestillingTransaksjonId
+        __typename
+      }
+      nextToken
+      __typename
+    }
+  }
+`;
Index: src/graphql/subscriptions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/graphql/subscriptions.js b/src/graphql/subscriptions.js
new file mode 100644
--- /dev/null	(date 1704661230232)
+++ b/src/graphql/subscriptions.js	(date 1704661230232)
@@ -0,0 +1,303 @@
+/* eslint-disable */
+// this is an auto generated file. This will be overwritten
+
+export const onCreateProdukt = /* GraphQL */ `
+  subscription OnCreateProdukt($filter: ModelSubscriptionProduktFilterInput) {
+    onCreateProdukt(filter: $filter) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onUpdateProdukt = /* GraphQL */ `
+  subscription OnUpdateProdukt($filter: ModelSubscriptionProduktFilterInput) {
+    onUpdateProdukt(filter: $filter) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onDeleteProdukt = /* GraphQL */ `
+  subscription OnDeleteProdukt($filter: ModelSubscriptionProduktFilterInput) {
+    onDeleteProdukt(filter: $filter) {
+      id
+      produktnavn
+      farge
+      farge2
+      lengde
+      bredde
+      detaljefarger
+      klips
+      vinyltekst
+      fontfarge
+      font
+      pris
+      kommentar
+      valgtLeke
+      bestillingID
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onCreateTransaksjon = /* GraphQL */ `
+  subscription OnCreateTransaksjon(
+    $filter: ModelSubscriptionTransaksjonFilterInput
+  ) {
+    onCreateTransaksjon(filter: $filter) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onUpdateTransaksjon = /* GraphQL */ `
+  subscription OnUpdateTransaksjon(
+    $filter: ModelSubscriptionTransaksjonFilterInput
+  ) {
+    onUpdateTransaksjon(filter: $filter) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onDeleteTransaksjon = /* GraphQL */ `
+  subscription OnDeleteTransaksjon(
+    $filter: ModelSubscriptionTransaksjonFilterInput
+  ) {
+    onDeleteTransaksjon(filter: $filter) {
+      id
+      betalingsmetode
+      betalingsstatus
+      total
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onCreateKunde = /* GraphQL */ `
+  subscription OnCreateKunde($filter: ModelSubscriptionKundeFilterInput) {
+    onCreateKunde(filter: $filter) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onUpdateKunde = /* GraphQL */ `
+  subscription OnUpdateKunde($filter: ModelSubscriptionKundeFilterInput) {
+    onUpdateKunde(filter: $filter) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onDeleteKunde = /* GraphQL */ `
+  subscription OnDeleteKunde($filter: ModelSubscriptionKundeFilterInput) {
+    onDeleteKunde(filter: $filter) {
+      id
+      navn
+      epost
+      adresse
+      postnr
+      poststed
+      telefon
+      Bestillinger {
+        nextToken
+        __typename
+      }
+      createdAt
+      updatedAt
+      __typename
+    }
+  }
+`;
+export const onCreateBestilling = /* GraphQL */ `
+  subscription OnCreateBestilling(
+    $filter: ModelSubscriptionBestillingFilterInput
+  ) {
+    onCreateBestilling(filter: $filter) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
+export const onUpdateBestilling = /* GraphQL */ `
+  subscription OnUpdateBestilling(
+    $filter: ModelSubscriptionBestillingFilterInput
+  ) {
+    onUpdateBestilling(filter: $filter) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
+export const onDeleteBestilling = /* GraphQL */ `
+  subscription OnDeleteBestilling(
+    $filter: ModelSubscriptionBestillingFilterInput
+  ) {
+    onDeleteBestilling(filter: $filter) {
+      id
+      ordreDato
+      bestillingsstatus
+      kundeID
+      Kunde {
+        id
+        navn
+        epost
+        adresse
+        postnr
+        poststed
+        telefon
+        createdAt
+        updatedAt
+        __typename
+      }
+      Produkter {
+        nextToken
+        __typename
+      }
+      Transaksjon {
+        id
+        betalingsmetode
+        betalingsstatus
+        total
+        createdAt
+        updatedAt
+        __typename
+      }
+      createdAt
+      updatedAt
+      bestillingTransaksjonId
+      __typename
+    }
+  }
+`;
Index: amplify/backend/api/enkeltbutikknettside/cli-inputs.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/cli-inputs.json b/amplify/backend/api/enkeltbutikknettside/cli-inputs.json
new file mode 100644
--- /dev/null	(date 1704661030357)
+++ b/amplify/backend/api/enkeltbutikknettside/cli-inputs.json	(date 1704661030357)
@@ -0,0 +1,22 @@
+{
+  "version": 1,
+  "serviceConfiguration": {
+    "apiName": "enkeltbutikknettside",
+    "serviceName": "AppSync",
+    "defaultAuthType": {
+      "mode": "API_KEY",
+      "keyDescription": "api key description",
+      "expirationTime": 30
+    },
+    "additionalAuthTypes": [
+      {
+        "mode": "AWS_IAM"
+      }
+    ],
+    "conflictResolution": {
+      "defaultResolutionStrategy": {
+        "type": "NONE"
+      }
+    }
+  }
+}
\ No newline at end of file
Index: amplify/team-provider-info.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/team-provider-info.json b/amplify/team-provider-info.json
new file mode 100644
--- /dev/null	(date 1704661230237)
+++ b/amplify/team-provider-info.json	(date 1704661230237)
@@ -0,0 +1,15 @@
+{
+  "staging": {
+    "awscloudformation": {
+      "AuthRoleName": "amplify-amplifyadb3b82811a94-staging-202144-authRole",
+      "UnauthRoleArn": "arn:aws:iam::927964485773:role/amplify-amplifyadb3b82811a94-staging-202144-unauthRole",
+      "AuthRoleArn": "arn:aws:iam::927964485773:role/amplify-amplifyadb3b82811a94-staging-202144-authRole",
+      "Region": "eu-north-1",
+      "DeploymentBucketName": "amplify-amplifyadb3b82811a94-staging-202144-deployment",
+      "UnauthRoleName": "amplify-amplifyadb3b82811a94-staging-202144-unauthRole",
+      "StackName": "amplify-amplifyadb3b82811a94-staging-202144",
+      "StackId": "arn:aws:cloudformation:eu-north-1:927964485773:stack/amplify-amplifyadb3b82811a94-staging-202144/60217bc0-ad9a-11ee-802e-0a48f03b554a",
+      "AmplifyAppId": "d2fdvfdh0bu1gr"
+    }
+  }
+}
\ No newline at end of file
Index: amplify/backend/api/enkeltbutikknettside/parameters.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/parameters.json b/amplify/backend/api/enkeltbutikknettside/parameters.json
new file mode 100644
--- /dev/null	(date 1704661155397)
+++ b/amplify/backend/api/enkeltbutikknettside/parameters.json	(date 1704661155397)
@@ -0,0 +1,5 @@
+{
+  "AppSyncApiName": "enkeltbutikknettside",
+  "DynamoDBBillingMode": "PAY_PER_REQUEST",
+  "DynamoDBEnableServerSideEncryption": false
+}
\ No newline at end of file
Index: amplify/cli.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/cli.json b/amplify/cli.json
new file mode 100644
--- /dev/null	(date 1704661030316)
+++ b/amplify/cli.json	(date 1704661030316)
@@ -0,0 +1,61 @@
+{
+    "features": {
+        "graphqltransformer": {
+            "addmissingownerfields": true,
+            "improvepluralization": false,
+            "validatetypenamereservedwords": true,
+            "useexperimentalpipelinedtransformer": true,
+            "enableiterativegsiupdates": true,
+            "secondarykeyasgsi": true,
+            "skipoverridemutationinputtypes": true,
+            "transformerversion": 2,
+            "suppressschemamigrationprompt": true,
+            "securityenhancementnotification": false,
+            "showfieldauthnotification": false,
+            "usesubusernamefordefaultidentityclaim": true,
+            "usefieldnameforprimarykeyconnectionfield": false,
+            "enableautoindexquerynames": true,
+            "respectprimarykeyattributesonconnectionfield": true,
+            "shoulddeepmergedirectiveconfigdefaults": false,
+            "populateownerfieldforstaticgroupauth": true
+        },
+        "frontend-ios": {
+            "enablexcodeintegration": true
+        },
+        "auth": {
+            "enablecaseinsensitivity": true,
+            "useinclusiveterminology": true,
+            "breakcirculardependency": true,
+            "forcealiasattributes": false,
+            "useenabledmfas": true
+        },
+        "codegen": {
+            "useappsyncmodelgenplugin": true,
+            "usedocsgeneratorplugin": true,
+            "usetypesgeneratorplugin": true,
+            "cleangeneratedmodelsdirectory": true,
+            "retaincasestyle": true,
+            "addtimestampfields": true,
+            "handlelistnullabilitytransparently": true,
+            "emitauthprovider": true,
+            "generateindexrules": true,
+            "enabledartnullsafety": true,
+            "generatemodelsforlazyloadandcustomselectionset": false
+        },
+        "appsync": {
+            "generategraphqlpermissions": true
+        },
+        "latestregionsupport": {
+            "pinpoint": 1,
+            "translate": 1,
+            "transcribe": 1,
+            "rekognition": 1,
+            "textract": 1,
+            "comprehend": 1
+        },
+        "project": {
+            "overrides": true
+        }
+    },
+    "debug": {}
+}
\ No newline at end of file
Index: amplify/backend/api/enkeltbutikknettside/schema.graphql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/schema.graphql b/amplify/backend/api/enkeltbutikknettside/schema.graphql
new file mode 100644
--- /dev/null	(date 1704661030364)
+++ b/amplify/backend/api/enkeltbutikknettside/schema.graphql	(date 1704661030364)
@@ -0,0 +1,45 @@
+type Produkt @model @auth(rules: [{allow: public}]) {
+  id: ID!
+  produktnavn: String
+  farge: String
+  farge2: String
+  lengde: Int
+  bredde: Int
+  detaljefarger: String
+  klips: String
+  vinyltekst: String
+  fontfarge: String
+  font: String
+  pris: Int
+  kommentar: String
+  valgtLeke: String
+  bestillingID: ID! @index(name: "byBestilling")
+}
+
+type Transaksjon @model @auth(rules: [{allow: public}]) {
+  id: ID!
+  betalingsmetode: String
+  betalingsstatus: String
+  total: Int
+}
+
+type Kunde @model @auth(rules: [{allow: public}]) {
+  id: ID!
+  navn: String
+  epost: AWSEmail
+  adresse: String
+  postnr: String
+  poststed: String
+  telefon: String
+  Bestillinger: [Bestilling] @hasMany(indexName: "byKunde", fields: ["id"])
+}
+
+type Bestilling @model @auth(rules: [{allow: public}]) {
+  id: ID!
+  ordreDato: AWSDate
+  bestillingsstatus: String
+  kundeID: ID! @index(name: "byKunde")
+  Kunde: Kunde @belongsTo(fields: ["kundeID"])
+  Produkter: [Produkt] @hasMany(indexName: "byBestilling", fields: ["id"])
+  Transaksjon: Transaksjon @hasOne
+}
Index: amplify/backend/api/enkeltbutikknettside/transform.conf.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/amplify/backend/api/enkeltbutikknettside/transform.conf.json b/amplify/backend/api/enkeltbutikknettside/transform.conf.json
new file mode 100644
--- /dev/null	(date 1704661030369)
+++ b/amplify/backend/api/enkeltbutikknettside/transform.conf.json	(date 1704661030369)
@@ -0,0 +1,5 @@
+{
+    "Version": 5,
+    "ElasticsearchWarning": true,
+    "ResolverConfig": {}
+}
\ No newline at end of file
